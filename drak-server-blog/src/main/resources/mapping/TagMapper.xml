<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linsu.modular.blog.dao.TagMapper">
  <resultMap id="BaseResultMap" type="com.linsu.modular.blog.model.Tag">
    <id column="oid" jdbcType="BIGINT" property="oid" />
    <result column="tag_comment_count" jdbcType="INTEGER" property="tagCommentCount" />
    <result column="tag_follower_count" jdbcType="INTEGER" property="tagFollowerCount" />
    <result column="tag_link_count" jdbcType="INTEGER" property="tagLinkCount" />
    <result column="tag_title" jdbcType="VARCHAR" property="tagTitle" />
    <result column="tag_uri" jdbcType="VARCHAR" property="tagUri" />
    <result column="tag_category_id" jdbcType="BIGINT" property="tagCategoryId" />
    <result column="tag_create_time" jdbcType="TIMESTAMP" property="tagCreateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, tag_comment_count, tag_follower_count, tag_link_count, tag_title, tag_uri, tag_category_id, 
    tag_create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_blog_tag
    where oid = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_blog_tag
    where oid = #{oid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.linsu.modular.blog.model.Tag">
    insert into t_blog_tag (oid, tag_comment_count, tag_follower_count, 
      tag_link_count, tag_title, tag_uri, 
      tag_category_id, tag_create_time)
    values (#{oid,jdbcType=BIGINT}, #{tagCommentCount,jdbcType=INTEGER}, #{tagFollowerCount,jdbcType=INTEGER}, 
      #{tagLinkCount,jdbcType=INTEGER}, #{tagTitle,jdbcType=VARCHAR}, #{tagUri,jdbcType=VARCHAR}, 
      #{tagCategoryId,jdbcType=BIGINT}, #{tagCreateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.linsu.modular.blog.model.Tag">
    insert into t_blog_tag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="tagCommentCount != null">
        tag_comment_count,
      </if>
      <if test="tagFollowerCount != null">
        tag_follower_count,
      </if>
      <if test="tagLinkCount != null">
        tag_link_count,
      </if>
      <if test="tagTitle != null">
        tag_title,
      </if>
      <if test="tagUri != null">
        tag_uri,
      </if>
      <if test="tagCategoryId != null">
        tag_category_id,
      </if>
      <if test="tagCreateTime != null">
        tag_create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="tagCommentCount != null">
        #{tagCommentCount,jdbcType=INTEGER},
      </if>
      <if test="tagFollowerCount != null">
        #{tagFollowerCount,jdbcType=INTEGER},
      </if>
      <if test="tagLinkCount != null">
        #{tagLinkCount,jdbcType=INTEGER},
      </if>
      <if test="tagTitle != null">
        #{tagTitle,jdbcType=VARCHAR},
      </if>
      <if test="tagUri != null">
        #{tagUri,jdbcType=VARCHAR},
      </if>
      <if test="tagCategoryId != null">
        #{tagCategoryId,jdbcType=BIGINT},
      </if>
      <if test="tagCreateTime != null">
        #{tagCreateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linsu.modular.blog.model.Tag">
    update t_blog_tag
    <set>
      <if test="tagCommentCount != null">
        tag_comment_count = #{tagCommentCount,jdbcType=INTEGER},
      </if>
      <if test="tagFollowerCount != null">
        tag_follower_count = #{tagFollowerCount,jdbcType=INTEGER},
      </if>
      <if test="tagLinkCount != null">
        tag_link_count = #{tagLinkCount,jdbcType=INTEGER},
      </if>
      <if test="tagTitle != null">
        tag_title = #{tagTitle,jdbcType=VARCHAR},
      </if>
      <if test="tagUri != null">
        tag_uri = #{tagUri,jdbcType=VARCHAR},
      </if>
      <if test="tagCategoryId != null">
        tag_category_id = #{tagCategoryId,jdbcType=BIGINT},
      </if>
      <if test="tagCreateTime != null">
        tag_create_time = #{tagCreateTime,jdbcType=TIMESTAMP,}
      </if>
    </set>
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linsu.modular.blog.model.Tag">
    update t_blog_tag
    set tag_comment_count = #{tagCommentCount,jdbcType=INTEGER},
      tag_follower_count = #{tagFollowerCount,jdbcType=INTEGER},
      tag_link_count = #{tagLinkCount,jdbcType=INTEGER},
      tag_title = #{tagTitle,jdbcType=VARCHAR},
      tag_uri = #{tagUri,jdbcType=VARCHAR},
      tag_category_id = #{tagCategoryId,jdbcType=BIGINT},
      tag_create_time = #{tagCreateTime,jdbcType=TIMESTAMP}
    where oid = #{oid,jdbcType=BIGINT}
  </update>

  <select id="getByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from t_blog_tag where tag_title= #{name}
  </select>

  <select id="getTagsByName" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from t_blog_tag where tag_title like concat('%',#{name},'%') limit #{maxCnt,jdbcType=INTEGER} order by sort asc
  </select>

  <select id="getAllAvailableTags"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from t_blog_tag order by sort asc
  </select>
</mapper>